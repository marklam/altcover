<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName="AltCover.Prepare"
        AssemblyFile="$(MSBuildThisFileDirectory)../../tools/netcoreapp2.0/AltCover.dll" />
  <UsingTask TaskName="AltCover.Collect"
        AssemblyFile="$(MSBuildThisFileDirectory)../../tools/netcoreapp2.0/AltCover.dll" />
  <UsingTask TaskName="AltCover.PowerShell"
        AssemblyFile="$(MSBuildThisFileDirectory)../../tools/netcoreapp2.0/AltCover.dll" />
  <UsingTask TaskName="AltCover.GetVersion"
        AssemblyFile="$(MSBuildThisFileDirectory)../../tools/netcoreapp2.0/AltCover.dll" />
  <UsingTask TaskName="AltCover.Echo"
        AssemblyFile="$(MSBuildThisFileDirectory)../../tools/netcoreapp2.0/AltCover.dll" />
  <UsingTask TaskName="AltCover.RunSettings"
        AssemblyFile="$(MSBuildThisFileDirectory)../../tools/netcoreapp2.0/AltCover.dll" />

  <Target Name="AltCoverPreFlight" Condition="'$(AltCover)' == 'true'">
    <Error Condition="Exists('$(TargetDir)__Saved') AND '$(AltCoverForce)' != 'true'"
           Text="Directory '$(TargetDir)__Saved' exists from a previous run.  Either manually examine and delete it, or run with '/p:AltCoverForce=true' to force deletion" />
    <Warning Condition="Exists('$(TargetDir)__Saved') AND '$(AltCoverForce)' == 'true'"
             Text="Directory '$(TargetDir)__Saved' exists from a previous run.  Forcibly deleting it" />
    <RemoveDir Directories="$(TargetDir)__Saved"
               Condition="Exists('$(TargetDir)__Saved') AND '$(AltCoverForce)' == 'true'" />
  </Target>

  <Target Name="AltCoverRunPreparation" Condition="'$(AltCover)' == 'true'">
    <ItemGroup>
      <AltCoverXmlOutput Include="$(AltCoverXmlReport)" />
      <InputDirectory Include="$(TargetDir)" />
      <OutputDirectory Include="$(TargetDir)__Saved" />
    </ItemGroup>

    <PropertyGroup>
      <AltCoverXmlReport Condition="'$(AltCoverXmlReport)' != '' AND '$(TargetFrameworks)' != ''">%(AltCoverXmlOutput.RootDir)/%(AltCoverXmlOutput.Directory)/%(AltCoverXmlOutput.Filename).$(TargetFramework)%(AltCoverXmlOutput.Extension)</AltCoverXmlReport>
      <AltCoverXmlReport Condition="'$(AltCoverXmlReport)' == '' AND '$(TargetFrameworks)' == ''">$(ProjectDir)coverage.xml</AltCoverXmlReport>
      <AltCoverXmlReport Condition="'$(AltCoverXmlReport)' == '' AND '$(TargetFrameworks)' != ''">$(ProjectDir)coverage.$(TargetFramework).xml</AltCoverXmlReport>
    </PropertyGroup>
    <AltCover.PowerShell Condition="'$(AltCoverIpmo)' == 'true'" />
    <AltCover.GetVersion Condition="'$(AltCoverGetVersion)' == 'true'" />
    <AltCover.Prepare
      InputDirectories="@(InputDirectory)"
      OutputDirectories="@(OutputDirectory)"
      XmlReport="$(AltCoverXmlReport)"
      OpenCover="$(AltCoverOpenCover)"
      FileFilter="$(AltCoverFileFilter.Replace('\',%00).Split('|'))"
      PathFilter="$(AltCoverPathFilter.Replace('\',%00).Split('|'))"
      AssemblyFilter="$(AltCoverAssemblyFilter.Replace('\',%00).Split('|'))"
      AssemblyExcludeFilter="$(AltCoverAssemblyExcludeFilter.Replace('\',%00).Split('|'))"
      TypeFilter="$(AltCoverTypeFilter.Replace('\',%00).Split('|'))"
      MethodFilter="$(AltCoverMethodFilter.Replace('\',%00).Split('|'))"
      AttributeFilter="$(AltCoverAttributeFilter.Replace('\',%00).Split('|'))"
      CallContext="$(AltCoverCallContext.Split('|'))"
      Single="$(AltCoverSingle)"
      LineCover="$(AltCoverLineCover)"
      BranchCover="$(AltCoverBranchCover)"
      Dependencies="@(AltCoverDependencies)"
      SourceLink="$(AltCoverSourceLink)" />
  </Target>

  <Target Name="AltCoverInstrumentModulesNoBuild" AfterTargets="AltCoverPreFlight" Condition="'$(VSTestNoBuild)' == 'true'">
    <CallTarget Targets="AltCoverRunPreparation" />
  </Target>

  <Target Name="AltCoverInstrumentModulesAfterBuild" AfterTargets="BuildProject" Condition="'$(VSTestNoBuild)' != 'true'">
    <CallTarget Targets="AltCoverRunPreparation" />
  </Target>

  <!-- As per Microsoft.TestPlatform.targets v2.1.300, but with OnError clause -->
  <Target Name="VSTest">
    <PropertyGroup>
      <AltCoverPreFlightCheck Condition="Exists('$(TargetDir)__Saved')">Fail</AltCoverPreFlightCheck>
      <AltCoverPreFlightCheck Condition="!Exists('$(TargetDir)__Saved')">OK</AltCoverPreFlightCheck>
    </PropertyGroup>

    <CallTarget Targets="AltCoverPreFlight" />

    <CallTarget Condition="'$(VSTestNoBuild)' != 'true'" Targets="BuildProject" />

    <CallTarget Targets="ShowCallOfVSTestTaskWithParameter" />
    <Message Importance="High" Text="Settings Before: $(VSTestSetting)" />
    <AltCover.RunSettings
      TestSetting="$(VSTestSetting)">
      <Output TaskParameter="Extended" PropertyName="VSTestSetting" />
    </AltCover.RunSettings>
    <Message Importance="High" Text="Settings After: $(VSTestSetting)" />

    <Microsoft.TestPlatform.Build.Tasks.VSTestTask
      TestFileFullPath="$(TargetPath)"
      VSTestSetting="$(VSTestSetting)"
      VSTestTestAdapterPath="$(VSTestTestAdapterPath)"
      VSTestFramework="$(TargetFrameworkMoniker)"
      VSTestPlatform="$(PlatformTarget)"
      VSTestTestCaseFilter="$(VSTestTestCaseFilter)"
      VSTestLogger="$(VSTestLogger)"
      VSTestListTests="$(VSTestListTests)"
      VSTestDiag="$(VSTestDiag)"
      VSTestCLIRunSettings="$(VSTestCLIRunSettings)"
      VSTestConsolePath="$(VSTestConsolePath)"
      VSTestResultsDirectory="$(VSTestResultsDirectory)"
      VSTestVerbosity="$(VSTestVerbosity)"
      VSTestCollect="$(VSTestCollect)"
      VSTestBlame="$(VSTestBlame)" />
    <OnError ExecuteTargets="AltCoverGenerateCoverageResult" Condition="'$(AltCoverPreFlightCheck)' == 'OK' AND '$(AltCoverFailFast)' != 'true' " />
  </Target>

  <Target Name="AltCoverGenerateCoverageResult" AfterTargets="VSTest" Condition="'$(AltCover)' == 'true'">
    <PropertyGroup>
      <AltCoverColour Condition="'$(AltCoverShowSummary)' != ''">$(AltCoverShowSummary)</AltCoverColour>
      <AltCoverColour Condition="'$(AltCoverShowSummary)' == ''">Foreground</AltCoverColour>
    </PropertyGroup>

    <AltCover.Collect
      RecorderDirectory="$(TargetDir)"
      LcovReport="$(AltCoverLcovReport)"
      Threshold="$(AltCoverThreshold)"
      Cobertura="$(AltCoverCobertura)"
      SummaryFormat="$(AltCoverSummaryFormat)">
      <Output TaskParameter="Summary" PropertyName="AltCoverSummary" />
    </AltCover.Collect>
    <AltCover.Echo Text="$(AltCoverSummary)" Colour="$(AltCoverColour)" Condition="$(AltCoverShowSummary) != ''" />
    <ItemGroup>
      <AltCoverRecorderGFiles Include="$(TargetDir)/AltCover.Recorder.g.*" />
      <AltCoverFSharpFiles Include="$(TargetDir)/FSharp.Core.*" />
      <AltCoverSavedFiles Include="$(TargetDir)__Saved/*.*" />
      <AltCoverRunSettings Include="$(TEMP)/*.altcover.runsettings" />
    </ItemGroup>
    <Delete Files="@(AltCoverRunSettings)" />
    <Delete Files="@(AltCoverRecorderGFiles)" />
    <Delete Files="@(AltCoverFSharpFiles)" />
    <Move SourceFiles="@(AltCoverSavedFiles)" DestinationFolder="$(TargetDir)" OverwriteReadOnlyFiles="true" />
    <RemoveDir Directories="$(TargetDir)__Saved" Condition="Exists('$(TargetDir)__Saved')" />
  </Target>
</Project>